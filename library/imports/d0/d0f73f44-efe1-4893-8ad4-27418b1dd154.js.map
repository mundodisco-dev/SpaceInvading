{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\UI.js"],"names":["cc","Class","extends","Component","properties","canvas","Node","ShootCollider","default","type","CircleCollider","LeftCollider","RightCollider","Shooter","Hero","onLoad","pressedShoot","pressedLeft","pressedRight","rightPosition","p","x","node","position","y","leftPosition","ShooterComponent","getComponent","HeroComponent","setInputControlTouches","checkButtonsPressed","self","touchLoc","buttons","ignoreShoot","distanceSquared","pDistanceSQ","shoot","radius","right","left","setButtonsAsPressed","touch","getLocation","restartButtonsOnEnd","on","EventType","TOUCH_START","event","touches","getTouches","length","TOUCH_MOVE","TOUCH_END","update","dt","startShooting","moveLeft","moveRight","stopped"],"mappings":"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","file":"unknown","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      canvas: cc.Node,\r\n      ShootCollider: {\r\n          default: null,\r\n          type: cc.CircleCollider\r\n      },\r\n      LeftCollider: {\r\n          default: null,\r\n          type: cc.CircleCollider\r\n      },\r\n      RightCollider: {\r\n          default: null,\r\n          type: cc.CircleCollider\r\n      },\r\n      Shooter: {\r\n          default: null,\r\n          type: cc.Node\r\n      },\r\n      Hero: {\r\n          default: null,\r\n          type: cc.Node\r\n      }\r\n    },\r\n\r\n    onLoad: function () {\r\n      this.pressedShoot = false;\r\n      this.pressedLeft = false;\r\n      this.pressedRight = false;\r\n\r\n      this.rightPosition = cc.p({x: this.RightCollider.node.position.x, y: this.RightCollider.node.position.y});\r\n      this.leftPosition =  cc.p({x: this.LeftCollider.node.position.x, y: this.LeftCollider.node.position.y});\r\n\r\n      this.ShooterComponent = this.Shooter.getComponent(\"Shooter\");\r\n      this.HeroComponent = this.Hero.getComponent(\"Hero\");\r\n      this.setInputControlTouches();\r\n    },\r\n\r\n    checkButtonsPressed: function(self,touchLoc,buttons,ignoreShoot)\r\n    {\r\n      if (!ignoreShoot)\r\n      {\r\n        var distanceSquared = cc.pDistanceSQ(self.ShootCollider.node.position, touchLoc);\r\n        buttons.shoot = (distanceSquared < (self.ShootCollider.radius * self.ShootCollider.radius));\r\n      }\r\n      distanceSquared = cc.pDistanceSQ(this.rightPosition, touchLoc);\r\n      buttons.right = (distanceSquared < (self.RightCollider.radius * self.RightCollider.radius));\r\n      if (buttons.right) return;\r\n      distanceSquared = cc.pDistanceSQ(this.leftPosition, touchLoc);\r\n      buttons.left = (distanceSquared < (self.LeftCollider.radius * self.LeftCollider.radius));\r\n    },\r\n\r\n    setButtonsAsPressed: function(self,touch,ignoreShoot)\r\n    {\r\n      var buttons = {left: false, right: false, shoot: false};\r\n      self.checkButtonsPressed(self,touch.getLocation(),buttons,ignoreShoot);\r\n      if (buttons.shoot) self.pressedShoot = true;\r\n      // TO-DO controlar cuando es TOUCH_MOVE y se sale de ambos botones\r\n      if (!buttons.left && !buttons.right) return true;\r\n      self.pressedLeft = buttons.left;\r\n      self.pressedRight = buttons.right;\r\n    },\r\n\r\n    restartButtonsOnEnd: function(self,touch)\r\n    {\r\n      var buttons = {left: false, right: false, shoot: false};\r\n      self.checkButtonsPressed(self,touch.getLocation(),buttons);\r\n      // if (buttons.shoot) self.pressedShoot = false;\r\n      if (buttons.left) self.pressedLeft = false;\r\n      if (buttons.right) self.pressedRight = false;\r\n    },\r\n\r\n    setInputControlTouches: function(){\r\n      var self = this;\r\n      self.canvas.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n          var touches = event.getTouches();\r\n          self.setButtonsAsPressed(self,touches[0],false);\r\n          if (touches.length >= 2)\r\n          {\r\n            self.setButtonsAsPressed(self,touches[1],false);\r\n          }\r\n          return true;\r\n      }, self.node);\r\n\r\n      self.canvas.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n          var touches = event.getTouches();\r\n          self.setButtonsAsPressed(self,touches[0],true);\r\n          if (touches.length >= 2)\r\n          {\r\n            self.setButtonsAsPressed(self,touches[1],true);\r\n          }\r\n          return true;\r\n      }, self.node);\r\n      self.canvas.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n          var touches = event.getTouches();\r\n          self.restartButtonsOnEnd(self,touches[0]);\r\n          if (touches.length >= 2)\r\n          {\r\n            self.restartButtonsOnEnd(self,touches[1]);\r\n          }\r\n          return true;\r\n      }, self.node);\r\n    },\r\n\r\n    update: function (dt) {\r\n      if (this.pressedShoot)\r\n      {\r\n        this.pressedShoot = false;\r\n        this.ShooterComponent.startShooting();\r\n      }\r\n\r\n      if (this.pressedLeft) this.HeroComponent.moveLeft();\r\n      else if (this.pressedRight) this.HeroComponent.moveRight();\r\n      else this.HeroComponent.stopped();\r\n    },\r\n\r\n\r\n});\r\n"]}