{"version":3,"sources":["Game.js"],"names":["Enemy","require","cc","Class","extends","Component","properties","sideMargin","enemyPrefab","default","type","Prefab","runnerPrefab","hero","Node","ui","scoreDisplay","Label","onLoad","isRunning","isSpawningRunners","node","on","onGameOver","onNumLifesChanged","HeroComponent","getComponent","livesA","getChildByName","livesB","horizontalEnemyMargin","verticalEnemyMargin","onStartGame","loadSprite","sprite","url","loader","loadRes","SpriteFrame","err","spriteFrame","event","data","getUserData","lives","Sprite","activeInHierarchy","active","Math","trunc","director","getCollisionManager","enabled","resetScore","currentLevel","checkSpawnNextLevel","spawnStandardEnemies","score","updateScoreUI","updateScore","points","length","string","nextLevel","console","log","initiateRunners","enemyDown","infoEnemy","numberAliveEnemies","newEnemy","positionX","numberEnemies","numberLines","positionY","EnemyMapPool","j","tempEnemyPool","i","push","instantiate","addChild","setPosition","x","y","init","spawnedRunners","numberRunners","runnerMarginPosY","lastRunnerSpawned","mssBetweenRunners","spawnRunners","Date","now","createRunner","direction","newRunner","checkToSpawnRunners","checkForNextLevel","loadScene","update","dt"],"mappings":"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","file":"unknown","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["const Enemy = require(\"Enemy\");\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n      sideMargin : 60,\r\n      enemyPrefab: {\r\n          default: null,\r\n          type: cc.Prefab\r\n      },\r\n    runnerPrefab: {\r\n          default: null,\r\n          type: cc.Prefab\r\n      },\r\n      hero: {\r\n          default: null,\r\n          type: cc.Node\r\n      },\r\n      ui: {\r\n        default: null,\r\n        type: cc.Node\r\n      },\r\n      scoreDisplay:{\r\n        default: null,\r\n        type: cc.Label\r\n      },\r\n  },\r\n\r\n  // use this for initialization\r\n  onLoad: function () {\r\n    this.isRunning = false;\r\n    this.isSpawningRunners = false;\r\n    this.node.on('GameOver', this.onGameOver, this);\r\n    this.node.on('numLifesChanged', this.onNumLifesChanged, this);\r\n    this.HeroComponent = this.hero.getComponent(\"Hero\");\r\n    this.livesA = this.ui.getChildByName('LivesA');\r\n    this.livesB = this.ui.getChildByName('LivesB');\r\n    this.horizontalEnemyMargin = 70;\r\n    this.verticalEnemyMargin = 70;\r\n\r\n    this.onStartGame();\r\n  },\r\n\r\n  loadSprite: function(sprite,url)\r\n  {\r\n    cc.loader.loadRes(url, cc.SpriteFrame, function (err, spriteFrame) {\r\n      sprite.spriteFrame = spriteFrame;\r\n    });\r\n  },\r\n\r\n  onNumLifesChanged: function (event)  {\r\n    var data = event.getUserData();\r\n    if (data.type && data.type == -1)\r\n    {\r\n      // TO-DO pausar juego , respawn hero\r\n    }\r\n    if (this.HeroComponent.lives < 10)\r\n    {\r\n      this.loadSprite(this.livesA.getComponent(cc.Sprite),\"Sprites/UI/numeral\"+this.HeroComponent.lives);\r\n      if (this.livesB.activeInHierarchy) this.livesB.active = false;\r\n    }\r\n    else if (this.HeroComponent.lives < 100)\r\n    {\r\n      this.loadSprite(this.livesA.getComponent(cc.Sprite),\"Sprites/UI/numeral\"+ Math.trunc(this.HeroComponent.lives / 10));\r\n      this.loadSprite(this.livesB.getComponent(cc.Sprite),\"Sprites/UI/numeral\"+(this.HeroComponent.lives % 10));\r\n      if (!this.livesB.activeInHierarchy) this.livesB.active = true;\r\n    }\r\n\r\n  },\r\n\r\n  onStartGame: function () {\r\n    cc.director.getCollisionManager().enabled = true;\r\n    // cc.director.getCollisionManager().enabledDebugDraw  = true;\r\n    this.resetScore();\r\n    this.currentLevel = 1;\r\n    this.checkSpawnNextLevel = false;\r\n    this.isRunning = true;\r\n\r\n    // this.initiateRunners();\r\n    this.spawnStandardEnemies();\r\n  },\r\n\r\n  resetScore: function()\r\n  {\r\n    this.score = 0;\r\n    this.updateScoreUI();\r\n  },\r\n\r\n  updateScore: function(points)\r\n  {\r\n    this.score += points;\r\n    this.updateScoreUI();\r\n  },\r\n\r\n  updateScoreUI: function()\r\n  {\r\n    var score = this.score+\"\";\r\n    while (score.length < 8) score = \"0\" + score;\r\n    this.scoreDisplay.string = score;\r\n  },\r\n\r\n  nextLevel: function() {\r\n    this.currentLevel++;\r\n    console.log(\"current Level \" + this.currentLevel);\r\n    // TO-DO\r\n    // this.spawnStandardEnemies();\r\n    this.initiateRunners();\r\n  },\r\n\r\n  enemyDown: function(infoEnemy)\r\n  {\r\n    if (infoEnemy && infoEnemy.points)\r\n    {\r\n      this.updateScore(infoEnemy.points);\r\n    }\r\n    this.numberAliveEnemies--;\r\n  },\r\n\r\n\tspawnStandardEnemies: function() {\r\n    var newEnemy = null;\r\n    var positionX = -2 * this.horizontalEnemyMargin;\r\n    // TO-DO Levels\r\n    var numberEnemies = 2;\r\n    var numberLines = 2;\r\n    var positionY = 0;\r\n    this.EnemyMapPool = [];\r\n    for (var j=0; j<numberLines+0; j++)\r\n    {\r\n      var url = \"Sprites/Enemy/enemyBlue\"+(j+1);\r\n      var tempEnemyPool = [];\r\n      for (var i=0; i<numberEnemies; i++)\r\n      {\r\n        tempEnemyPool.push(1);\r\n        newEnemy = cc.instantiate(this.enemyPrefab);\r\n        this.node.addChild(newEnemy);\r\n        newEnemy.setPosition({x:positionX + (i * this.horizontalEnemyMargin),y:positionY + j * this.verticalEnemyMargin});\r\n        newEnemy.getComponent('Enemy').init(this,this.EnemyMapPool,i,j,url,numberEnemies,this.sideMargin, this.horizontalEnemyMargin, this.verticalEnemyMargin,numberLines);\r\n      }\r\n      this.EnemyMapPool.push(tempEnemyPool);\r\n    }\r\n    this.numberAliveEnemies = numberLines * numberLines;\r\n    this.checkSpawnNextLevel = true;\r\n  },\r\n\r\n  initiateRunners: function()\r\n  {\r\n    this.isSpawningRunners = true;\r\n    this.spawnedRunners = 0;\r\n    this.numberRunners = 2;\r\n    this.runnerMarginPosY = 70;\r\n    this.lastRunnerSpawned = null;\r\n    this.mssBetweenRunners = 2250;\r\n  },\r\n\r\n  spawnRunners: function()\r\n  {\r\n    this.lastRunnerSpawned = Date.now();\r\n    // TO-DO levels on runners\r\n    this.createRunner(1);\r\n    this.createRunner(-1);\r\n    this.spawnedRunners += 2;\r\n    this.numberAliveEnemies += 2;\r\n    if (this.spawnedRunners >= this.numberRunners)\r\n    {\r\n      this.checkSpawnNextLevel = true;\r\n    }\r\n  },\r\n\r\n  createRunner: function(direction)\r\n  {\r\n    var newRunner = cc.instantiate(this.runnerPrefab);\r\n    this.node.addChild(newRunner);\r\n    newRunner.getComponent(\"EnemyRunner\").init(direction, this.runnerMarginPosY * this.spawnedRunners/2 , 500 * this.spawnedRunners/2);\r\n    newRunner.setPosition({x:569*direction,y:292});\r\n  },\r\n\r\n  checkToSpawnRunners: function()\r\n  {\r\n    if (this.isSpawningRunners && ((Date.now() - this.lastRunnerSpawned) > this.mssBetweenRunners) && this.spawnedRunners < this.numberRunners)\r\n    {\r\n        this.spawnRunners();\r\n    }\r\n  },\r\n\r\n  checkForNextLevel: function()\r\n  {\r\n    if (this.checkSpawnNextLevel && this.numberAliveEnemies == 0)\r\n    {\r\n      this.checkSpawnNextLevel = false;\r\n      this.nextLevel();\r\n    }\r\n  },\r\n\r\n  onGameOver: function ()\r\n  {\r\n    // TO-DO\r\n    console.log(\"game over\");\r\n    cc.director.loadScene('Menu');\r\n  },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n      this.checkForNextLevel();\r\n      this.checkToSpawnRunners();\r\n    },\r\n\r\n\r\n\r\n});\r\n"]}